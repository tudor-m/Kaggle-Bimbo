{
coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef
ret = ret + estRet[[i]]*coef
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
for (i in c(1,2,3,5,6,7,8))
{
coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
print(coef)
coefSum = coefSum + coef
ret = ret + estRet[[i]]*coef
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,2.75,1.5,1.75,3.5,3.5,3.5)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
train$
coef[1]
coef[8]
ret = 0
coefSum = 0
coef = c(3.5,2.75,1.5,1,1.75,3.5,3.5,3.5)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,2.75,1.5,1,1.75,3.5,3.5,3.)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,2.75,1.5,1,1.75,3.5,3.5,2.5)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,3,1.5,1,1.75,3.5,3.5,2.5)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,4,1.5,1,1.75,3.5,3.5,2.5)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,5,1.5,1,1.75,3.5,3.5,2.5)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,4,1.5,1,1.75,3.5,3.5,4)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,4,1.5,1,1.75,3.5,3.5,2)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,4,1.2,1,1.75,3.5,3.5,2)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,4,1.2,2,1.75,3.5,3.5,2)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(3.5,4,1.2,1.5,1.75,3.5,3.5,2)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
ret = 0
coefSum = 0
coef = c(2.5,4,1.2,1.5,1.75,3.5,3.5,2)
for (i in c(1,2,3,5,6,7,8))
{
#coef = 1/(0.2+(as.numeric(estRetE[[i]][1]))^4)
coefSum = coefSum + coef[i]
ret = ret + coef[i]*estRet[[i]]
}
ret = ret/coefSum
estE = errMeasure(ret,test$Demanda_uni_equil)
print(estE[[1]])
for (i in 1:length(estRetE)) print(estRetE[[i]][1])
class_name   = "A"
s_feat_list = c("Cliente_ID","Producto_ID")
s_class <- train[,list(.N,floor(mean(Demanda_uni_equil))),by=list(Cliente_ID,Producto_ID)]
setnames(s_class,c("Cliente_ID","Producto_ID","N","V1"))
s_class_test <- merge(test,s_class,by=s_feat_list,all.x=TRUE)[order(id),list(id,V1)]
setnames(s_class_test,c("id","Demanda_uni_equil"))
bk = 0.45*mean(s_class_test$Demanda_uni_equil,na.rm = TRUE)
idxna = which(is.na(s_class_test$Demanda_uni_equil))
s_class_test[which(is.na(s_class_test$Demanda_uni_equil))] = bk
estE = errMeasure(s_class_test$Demanda_uni_equil,test$Demanda_uni_equil)
print(estE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$Demanda_uni_equil
merge(train,s_class,by=s_feat_list,all.x=TRUE)[order(id),list(id,V1)]
merge(train,s_class,by=s_feat_list,all.x=TRUE)[,list(id,V1)]
merge(train,s_class,by=s_feat_list,all.x=TRUE)
s_class_train <- merge(test,s_class,by=s_feat_list,all.x=TRUE)
s_class_train
errMeasure(s_class_train$Demanda_uni_equil,s_class_train$V1)
errMeasure(s_class_train$Demanda_uni_equil,s_class_train$V1)[[1]]
errMeasure <- function (vPred, vTarget)
{
if (length(vPred) != length(vTarget))
return(-1);
s1 = log(1+vPred)
s2 = log(1+vTarget)
s12 = (s1-s2)^2
return(list(sqrt(mean(s12,na.rm = TRUE)),(s1-s2),s12))
}
errMeasure(s_class_train$Demanda_uni_equil,s_class_train$V1)[[1]]
s_class_train$Demanda_uni_equil-train$Demanda_uni_equil
nrow(s_class_train)
nrow(train)
s_class_train <- merge(train,s_class,by=s_feat_list,all.x=TRUE)
nrow(s_class_train)
s_class_train$Demanda_uni_equil-train$Demanda_uni_equil
errMeasure(s_class_train$Demanda_uni_equil,s_class_train$V1)[[1]]
s_class_test
s_class[1:10,]
s_class_train[1:10,]
train[1:10,]
train$id = 1:nrow(train)
s_class_train <- merge(train,s_class,by=s_feat_list,all.x=TRUE)[order(id),]
s_class_train$Demanda_uni_equil-train$Demanda_uni_equil
sum(s_class_train$Demanda_uni_equil-train$Demanda_uni_equil)
s_class_train <- merge(train,s_class,by=s_feat_list,all.x=TRUE)[order(id),list(id,V1)]
s_class_train
s_class <- train[,list(.N,floor(mean(Demanda_uni_equil))),by=list(Cliente_ID,Producto_ID)]
s_class
s_class <- train[,list(.N,floor(mean(Demanda_uni_equil))),by=list(Cliente_ID,Producto_ID)]
s_class
s_class <- train[,list(floor(mean(Demanda_uni_equil)),.N),by=list(Cliente_ID,Producto_ID)]
s_class
class_name   = "A"
s_feat_list = c("Cliente_ID","Producto_ID")
s_class <- train[,list(floor(mean(Demanda_uni_equil)),.N),by=list(Cliente_ID,Producto_ID)]
s_class_train <- merge(train,s_class,by=s_feat_list,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=s_feat_list,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.45*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
estE = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(estE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
estE
estE[[1]]
list(3,4)
c(list(3,4))
c(unlist(list(3,4)))
c(3,4)
class_name   = "A"
s_feat_list = list(Cliente_ID,Producto_ID)
s_fct_mean <- function(x)
{
floor(mean(x))
}
s_feat_list = list("Cliente_ID","Producto_ID")
s_fct_mean <- function(x)
{
floor(mean(x))
}
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct_mean(Demanda_uni_equil),.N),by=s_feat_list]
s_feat_list
c_feat
s_class <- train[,list(s_fct_mean(Demanda_uni_equil),.N),by=c_feat]
s_class
s_class_train <- merge(train,s_class,by=s_feat_list,all.x=TRUE)[order(id),list(id,V1)]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.45*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
class_name   = "A"
s_feat_list = list("Cliente_ID","Producto_ID")
s_fct_mean <- function(x)
{
floor(mean(x))
}
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct_mean(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.45*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
estE = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(estE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
class_name   = "B"
s_feat_list = list("Ruta_SAK","Producto_ID")
s_fct_mean <- function(x)
{
floor(mean(x))
}
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct_mean(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.45*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
estE = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(estE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
s_fct=s_fct_mean()
s_fct=s_fct_mean
s_fct
class_name   = "A"
s_feat_list = list("Cliente_ID","Producto_ID")
s_fct = s_fct_mean
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.45*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
estE = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(estE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
class_name   = "B"
s_feat_list = list("Ruta_SAK","Producto_ID")
s_fct = s_fct_mean
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct_mean(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.45*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
estE = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(estE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
length(idxna)
class_name   = "A"
s_feat_list = list("Cliente_ID","Producto_ID")
s_fct = s_fct_mean
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
#bk = 0.45*mean(s_class_test$V1,na.rm = TRUE)
#idxna = which(is.na(s_class_test$V1))
#s_class_test[which(is.na(s_class_test$V1))] = bk
estE = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(estE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
class_name   = "A"
s_feat_list = list("Cliente_ID","Producto_ID")
s_fct = s_fct_mean
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.45*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
estE = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(estE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
nrow(test)
length(idxna)
idxna = which(is.na(s_class_test$V1))
idxna = which(is.na(s_class_train$V1))
idxna
class_name   = "A"
s_feat_list = list("Cliente_ID","Producto_ID")
s_fct = s_fct_mean
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.45*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
estE = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(estE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
0:0.1:1
0:1:0.1
0:1
0:1:5
seq(1,2,0.1)
for (kk in seq(0,4,0.1) ) {
class_name   = "A"
s_feat_list = list("Cliente_ID","Producto_ID")
s_fct = s_fct_mean
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = kk*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
estE = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(estE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1 }
class_name   = "A"
s_feat_list = list("Cliente_ID","Producto_ID")
s_fct = s_fct_mean
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.4*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
trainE = errMeasure(s_class_train$V1,train$Demanda_uni_equil)
testE = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(trainE[[1]])
print(testE[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
estRet = list()
estRetE = list()
s_class_all = list()
s_class_train_all = list()
s_class_test_all = list()
s_err_train_all = list()
s_err_test_all = list()
class_name   = "A"
s_feat_list = list("Cliente_ID","Producto_ID")
s_fct = s_fct_mean
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.4*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
s_err_train = errMeasure(s_class_train$V1,train$Demanda_uni_equil)
s_err_test = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(s_err_train[[1]])
print(s_err_test[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
s_class_all[[class_name]] = s_class
s_class_train_all[[class_name]] = s_class_train
s_class_test_all[[class_name]] = s_class_test
s_err_train_all[[class_name]] = s_train
s_err_test_all[[class_name]] = s_test
class_name   = "A"
s_feat_list = list("Cliente_ID","Producto_ID")
s_fct = s_fct_mean
c_feat = c(unlist(s_feat_list))
s_class <- train[,list(s_fct(Demanda_uni_equil),.N),by=c_feat]
s_class_train <- merge(train,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
s_class_test <- merge(test,s_class,by=c_feat,all.x=TRUE)[order(id),list(id,V1)]
bk = 0.4*mean(s_class_test$V1,na.rm = TRUE)
idxna = which(is.na(s_class_test$V1))
s_class_test[which(is.na(s_class_test$V1))] = bk
s_err_train = errMeasure(s_class_train$V1,train$Demanda_uni_equil)
s_err_test = errMeasure(s_class_test$V1,test$Demanda_uni_equil)
print(s_err_train[[1]])
print(s_err_test[[1]])
estRetE[[class_name]] = estE
estRet[[class_name]] = s_class_test$V1
s_class_all[[class_name]] = s_class
s_class_train_all[[class_name]] = s_class_train
s_class_test_all[[class_name]] = s_class_test
s_err_train_all[[class_name]] = s_err_train
s_err_test_all[[class_name]] = s_err_test
s_err_train_all
names(s_err_train_all)
s_err_train_all[["A"]]
s_err_train_all[["A"]][1]
s_err_test_all[["A"]][1]
tmplist=list()
{"one":1}
str("one":1)
a
a=1
attr(a)
str(a)
attr(a,"num")
attr(a,"num")=10
a
attr(a,"sec")=22
a
str(a)
a.num
a["num"]
attr(a,"num")
attr(a,"sec")
print(a)
attr(a)
str(a)
attributes(a)
